---
- name: Ensure that all non-node hosts are accessible
  hosts: oo_masters_to_config:oo_etcd_to_config:oo_lb_to_config:oo_nfs_to_config
  any_errors_fatal: true
  tasks:

- name: Initialize basic host facts
  # l_init_fact_hosts is passed in via play during control-plane-only
  # upgrades and scale-up plays; otherwise oo_all_hosts is used.
  hosts: "{{ l_init_fact_hosts | default('oo_all_hosts') }}"
  roles:
  - role: openshift_facts
  tasks:
  # TODO: Should this role be refactored into health_checks??
  - name: Run openshift_sanitize_inventory to set variables
    import_role:
      name: openshift_sanitize_inventory

  - name: Detect OS Variant from /etc/os-release
    fail:
      msg: Atomic Host installations are no longer supported
    when: lookup('ini', 'VARIANT_ID type=properties file=/etc/os-release') == 'atomic.host'

  # TODO(michaelgugino) remove this line once CI is updated.
  - name: set openshift_deployment_type if unset
    set_fact:
      openshift_deployment_type: "{{ deployment_type }}"
    when:
    - openshift_deployment_type is undefined
    - deployment_type is defined

<<<<<<< HEAD
- name: Retrieve existing master configs and validate
  hosts: oo_masters_to_config
  gather_facts: no
  any_errors_fatal: true
  roles:
  - openshift_facts
  tasks:
  - import_role:
      name: openshift_control_plane
      tasks_from: check_existing_config.yml
=======
  - name: check for node already bootstrapped
    stat:
      path: "/etc/origin/node/bootstrap-node-config.yaml"
    register: bootstrap_node_config_path_check
  - name: initialize_facts set fact openshift_is_bootstrapped
    set_fact:
      openshift_is_bootstrapped: "{{ bootstrap_node_config_path_check.stat.exists }}"

  - name: initialize_facts set fact openshift_is_atomic and openshift_is_containerized
    set_fact:
      openshift_is_atomic: "{{ ostree_booted.stat.exists }}"
      openshift_is_containerized: "{{ ostree_booted.stat.exists or (containerized | default(false) | bool) }}"

  - name: Set use_crio to True if cri-o rpm is requested
    set_fact:
      openshift_use_crio: True
    when:
    - openshift_crio_use_rpm | default(False) | bool
>>>>>>> Switch the master to always run with bootstrapping on

  - when:
    - l_existing_config_master_config is defined
    - l_existing_config_master_config.networkConfig is defined
    block:
    - set_fact:
        openshift_portal_net: "{{ l_existing_config_master_config.networkConfig.serviceNetworkCIDR }}"

    - set_fact:
        osm_cluster_network_cidr: "{{ l_existing_config_master_config.networkConfig.clusterNetworks[0].cidr }}"
        osm_host_subnet_length: "{{ l_existing_config_master_config.networkConfig.clusterNetworks[0].hostSubnetLength }}"
      when:
      - l_existing_config_master_config.networkConfig.clusterNetworks is defined
      # End block

- name: Initialize special first-master variables
  hosts: oo_first_master
  roles:
  - role: openshift_facts
  tasks:
  - when: not (osm_default_node_selector is defined)
    block:
<<<<<<< HEAD
    - set_fact:
        # l_existing_config_master_config is set in openshift_control_plane/tasks/check_existing_config.yml
        openshift_master_config_node_selector: "{{ l_existing_config_master_config.projectConfig.defaultNodeSelector }}"
      when:
      - l_existing_config_master_config is defined
=======
    - stat:
        path: "/etc/origin/master/master-config.yaml"
      register: master_config_path_check

    - slurp:
        src: "/etc/origin/master/master-config.yaml"
      register: openshift_master_config_encoded_contents
      when: master_config_path_check.stat.exists

    - set_fact:
        openshift_master_config_node_selector: "{{ l_existing_config_master_config.projectConfig.defaultNodeSelector }}"
      vars:
        l_existing_config_master_config: "{{ (openshift_master_config_encoded_contents.content | b64decode | from_yaml) }}"
      when:
      - master_config_path_check.stat.exists
>>>>>>> Bug 1548641- upgrade now properly sets labels and selectors
      - l_existing_config_master_config.projectConfig is defined
      - l_existing_config_master_config.projectConfig.defaultNodeSelector is defined
      - l_existing_config_master_config.projectConfig.defaultNodeSelector != ''

  - set_fact:
      # We need to setup openshift_client_binary here for special uses of delegate_to in
      # later roles and plays.
      first_master_client_binary: "{{  openshift_client_binary }}"
      #Some roles may require this to be set for first master
      openshift_client_binary: "{{ openshift_client_binary }}"
      # we need to know if a default node selector has been manually set outside the installer
      l_osm_default_node_selector: '{{ osm_default_node_selector | default(openshift_master_config_node_selector) | default("node-role.kubernetes.io/compute=true") }}'

- name: Disable web console if required
  hosts: oo_masters_to_config
  gather_facts: no
  tasks:
  - set_fact:
      openshift_web_console_install: False
    when:
    - openshift_deployment_subtype is defined
    - openshift_deployment_subtype == 'registry' or ( osm_disabled_features is defined and 'WebConsole' in osm_disabled_features )

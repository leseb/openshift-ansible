---
- name: Master Install Checkpoint Start
  hosts: all
  gather_facts: false
  tasks:
  - name: Set Master install 'In Progress'
    run_once: true
    set_stats:
      data:
        installer_phase_master:
          title: "Master Install"
          playbook: "playbooks/openshift-master/config.yml"
          status: "In Progress"
          start: "{{ lookup('pipe', 'date +%Y%m%d%H%M%SZ') }}"

- name: Disable excluders and gather facts
  hosts: oo_masters_to_config
<<<<<<< HEAD
=======
  gather_facts: no
  roles:
  - role: openshift_excluder
    r_openshift_excluder_action: disable

- name: Gather and set facts for master hosts
  hosts: oo_masters_to_config
  pre_tasks:
  # Per https://bugzilla.redhat.com/show_bug.cgi?id=1469336
  #
  # When scaling up a cluster upgraded from OCP <= 3.5, ensure that
  # OPENSHIFT_DEFAULT_REGISTRY is present as defined on the existing
  # masters, or absent if such is the case.
  - name: Detect if this host is a new master in a scale up
    set_fact:
      g_openshift_master_is_scaleup: "{{ openshift.common.hostname in ( groups['new_masters'] | default([]) ) }}"

  - name: Scaleup Detection
    debug:
      var: g_openshift_master_is_scaleup

  - name: Check for RPM generated config marker file .config_managed
    stat:
      path: /etc/origin/.config_managed
    register: rpmgenerated_config

  - name: Remove RPM generated config files if present
    file:
      path: "/etc/origin/{{ item }}"
      state: absent
    when:
    - rpmgenerated_config.stat.exists == true
    - deployment_type == 'openshift-enterprise'
    with_items:
    - master
    - node
    - .config_managed

<<<<<<< HEAD
  - set_fact:
      openshift_master_etcd_port: "{{ (etcd_client_port | default('2379')) if (groups.oo_etcd_to_config is defined and groups.oo_etcd_to_config) else none }}"
      openshift_master_etcd_hosts: "{{ hostvars
                                       | oo_select_keys(groups['oo_etcd_to_config']
                                                        | default([]))
                                       | oo_collect('openshift.common.hostname')
                                       | default(none, true) }}"
>>>>>>> Remove openshift.common.service_type
=======
>>>>>>> Remove etcd_hosts and etcd_urls from openshift_facts
  roles:
  - openshift_facts
  tasks:
  - name: Disable excluders
    import_role:
      name: openshift_excluder
    vars:
      r_openshift_excluder_action: disable

  - openshift_facts:
      role: master
      local_facts:
        api_port: "{{ openshift_master_api_port }}"
        api_url: "{{ openshift_master_api_url | default(None) }}"
        api_use_ssl: "{{ openshift_master_api_use_ssl | default(None) }}"
        controllers_port: "{{ openshift_master_controllers_port | default(None) }}"
        public_api_url: "{{ openshift_master_public_api_url | default(None) }}"
        cluster_hostname: "{{ openshift_master_cluster_hostname | default(None) }}"
        cluster_public_hostname: "{{ openshift_master_cluster_public_hostname | default(None) }}"
        console_path: "{{ openshift_master_console_path | default(None) }}"
        console_port: "{{ openshift_master_console_port | default(None) }}"
        console_url: "{{ openshift_master_console_url | default(None) }}"
        console_use_ssl: "{{ openshift_master_console_use_ssl | default(None) }}"
        public_console_url: "{{ openshift_master_public_console_url | default(None) }}"
  - openshift_facts:
      role: node
      local_facts:
        bootstrapped: true

- import_playbook: certificates.yml

- name: Generate or retrieve existing session secrets
  hosts: oo_first_master
  roles:
  - role: openshift_facts
  tasks:
  - import_role:
      name: openshift_control_plane
<<<<<<< HEAD
      tasks_from: generate_session_secrets.yml
=======
      tasks_from: check_existing_config
>>>>>>> Upgrade to 3.10 with static pods

- name: Configure masters
  hosts: oo_masters_to_config
  any_errors_fatal: true
<<<<<<< HEAD
=======
  vars:
    openshift_master_count: "{{ openshift.master.master_count }}"
    openshift_master_session_auth_secrets: "{{ hostvars[groups.oo_first_master.0].openshift.master.session_auth_secrets }}"
    openshift_master_session_encryption_secrets: "{{ hostvars[groups.oo_first_master.0].openshift.master.session_encryption_secrets }}"
    openshift_ca_host: "{{ groups.oo_first_master.0 }}"
>>>>>>> Remove etcd_hosts and etcd_urls from openshift_facts
  pre_tasks:
  - name: Prepare the bootstrap node config on masters for self-hosting
    import_role:
      name: openshift_node_group
<<<<<<< HEAD
      tasks_from: bootstrap.yml
  - name: Have the masters automatically pull their configuration
    import_role:
      name: openshift_node_group
<<<<<<< HEAD
      tasks_from: bootstrap_config.yml
=======
      tasks_from: bootstrap
  # TODO: move me into a more appropriate location
  - name: Update the sysconfig for the masters to give them bootstrap config
    lineinfile:
      dest: "/etc/sysconfig/{{ openshift_service_type }}-node"
      line: "{{ item.line | default(omit) }}"
      regexp: "{{ item.regexp }}"
      state: "{{ item.state | default('present') }}"
    with_items:
    - line: "BOOTSTRAP_CONFIG_NAME={{ openshift_node_group_master | default('node-config-master') }}"
      regexp: "^BOOTSTRAP_CONFIG_NAME=.*"
>>>>>>> Switch the master to always run with bootstrapping on
=======
      tasks_from: bootstrap_config
    vars:
      r_node_dynamic_config_name: "{{ openshift_node_group_name | default('node-config-master') }}"
      r_node_dynamic_config_force: True
>>>>>>> Upgrade to 3.10 with static pods

  roles:
  - role: openshift_master_facts
  - role: openshift_cloud_provider
    when: openshift_cloudprovider_kind is defined
  - role: openshift_builddefaults
  - role: openshift_buildoverrides
<<<<<<< HEAD
=======
  - role: nickhammond.logrotate
>>>>>>> Switch the master to always run with bootstrapping on

  - role: openshift_control_plane
  - role: tuned
  - role: nuage_common
    when: openshift_use_nuage | default(false) | bool
  - role: nuage_ca
    when: openshift_use_nuage | default(false) | bool
  - role: nuage_master
    when: openshift_use_nuage | default(false) | bool
  - role: calico
    when: openshift_use_calico | default(false) | bool
  tasks:
<<<<<<< HEAD
=======
  - name: Set up automatic node config reconcilation
    run_once: True
    import_role:
      name: openshift_node_group
      tasks_from: sync
>>>>>>> Upgrade to 3.10 with static pods
  - import_role:
      name: kuryr
      tasks_from: master.yaml
    when: openshift_use_kuryr | default(false) | bool

<<<<<<< HEAD
<<<<<<< HEAD
  - name: setup bootstrap settings
    import_tasks: tasks/enable_bootstrap.yml
=======
  - name: Setup the node group config maps
    import_role:
      name: openshift_node_group
    when: openshift_master_bootstrap_enabled | default(false) | bool
    run_once: True
>>>>>>> Migrate to import_role for static role inclusion
=======
  - name: setup bootstrap settings
    include_tasks: tasks/enable_bootstrap.yml
<<<<<<< HEAD
    when: openshift_master_bootstrap_enabled | default(false) | bool
>>>>>>> Adding node autoapprover.
=======
>>>>>>> Switch the master to always run with bootstrapping on

  post_tasks:
  - name: Create group for deployment type
    group_by: key=oo_masters_deployment_type_{{ openshift_deployment_type }}
    changed_when: False
  - name: Re-enable excluders
    import_role:
      name: openshift_excluder
    vars:
      r_openshift_excluder_action: enable

<<<<<<< HEAD
<<<<<<< HEAD
- name: Deploy the central bootstrap configuration
  hosts: oo_first_master
  gather_facts: no
=======
- name: Configure API Aggregation on masters
  hosts: oo_masters
  serial: 1
  roles:
  - role: openshift_facts
>>>>>>> Remove openshift.common.service_type
  tasks:
  - name: setup bootstrap settings
    import_tasks: tasks/enable_bootstrap_config.yml
  - name: setup automatic node config reconcilation
    run_once: True
    import_role:
      name: openshift_node_group
      tasks_from: sync.yml

<<<<<<< HEAD
- name: Ensure inventory labels are assigned to masters
=======
=======
- name: Deploy the central bootstrap configuration
  hosts: oo_first_master
  gather_facts: no
  tasks:
  - name: setup bootstrap settings
    import_tasks: tasks/enable_bootstrap_config.yml

- name: Ensure inventory labels are assigned to masters
  hosts: oo_masters_to_config
  gather_facts: no
  roles:
  - role: openshift_manage_node
    openshift_master_host: "{{ groups.oo_first_master.0 }}"
    openshift_manage_node_is_master: "{{ ('oo_masters_to_config' in group_names) | bool }}"
    openshift_node_master_api_url: "{{ hostvars[groups.oo_first_master.0].openshift.master.api_url }}"

>>>>>>> Upgrade to 3.10 with static pods
- name: Re-enable excluder if it was previously enabled
>>>>>>> Switch the master to always run with bootstrapping on
  hosts: oo_masters_to_config
  gather_facts: no
  roles:
<<<<<<< HEAD
  - role: openshift_manage_node
    openshift_master_host: "{{ groups.oo_first_master.0 }}"
    openshift_manage_node_is_master: "{{ ('oo_masters_to_config' in group_names) | bool }}"
    openshift_node_master_api_url: "{{ hostvars[groups.oo_first_master.0].openshift.master.api_url }}"
=======
  - role: openshift_excluder
    r_openshift_excluder_action: enable
>>>>>>> Remove openshift.common.service_type

- name: Master Install Checkpoint End
  hosts: all
  gather_facts: false
  tasks:
  - name: Set Master install 'Complete'
    run_once: true
    set_stats:
      data:
        installer_phase_master:
          status: "Complete"
          end: "{{ lookup('pipe', 'date +%Y%m%d%H%M%SZ') }}"

---
<<<<<<< HEAD
=======
# TODO: Enhance redhat_subscription module
#       to make it able to attach to a pool
#       to make it able to enable repositories

<<<<<<< HEAD
- set_fact:
    rhel_subscription_pool: "{{ lookup('env', 'rhel_subscription_pool') | default(rhsub_pool | default('Red Hat OpenShift Container Platform, Premium*')) }}"
    rhel_subscription_user: "{{ lookup('env', 'rhel_subscription_user') | default(rhsub_user | default(omit, True)) }}"
    rhel_subscription_pass: "{{ lookup('env', 'rhel_subscription_pass') | default(rhsub_pass | default(omit, True)) }}"
    rhel_subscription_server: "{{ lookup('env', 'rhel_subscription_server') | default(rhsub_server | default(omit, True)) }}"

=======
>>>>>>> Remove reading shell environment in rhel_subscribe
>>>>>>> Remove reading shell environment in rhel_subscribe
- fail:
    msg: "This role is only supported for Red Hat hosts"
  when: ansible_distribution != 'RedHat'

<<<<<<< HEAD
=======
- fail:
    msg: The rhsub_user variable is required for this role.
  when: rhsub_user is not defined or not rhsub_user

- fail:
    msg: The rhsub_pass variable is required for this role.
  when: rhsub_pass is not defined or not rhsub_pass

- name: Detecting Atomic Host Operating System
  stat:
    path: /run/ostree-booted
  register: ostree_booted

- name: Satellite preparation
  command: "rpm -Uvh http://{{ rhsub_server }}/pub/katello-ca-consumer-latest.noarch.rpm"
  args:
    creates: /etc/rhsm/ca/katello-server-ca.pem
  when: rhsub_server is defined and rhsub_server

>>>>>>> Remove reading shell environment in rhel_subscribe
- name: Install Red Hat Subscription manager
  yum:
    name: subscription-manager
    state: present
  register: result
<<<<<<< HEAD
  until: result is succeeded

- name: Is host already registered?
  command: "subscription-manager version"
  register: rh_subscribed
  changed_when: False
=======
  until: result | success
>>>>>>> retry package operations

- name: Register host using user/password
  redhat_subscription:
    username: "{{ rhsub_user }}"
    password: "{{ rhsub_pass }}"
  register: rh_subscription
  until: rh_subscription is succeeded
  when:
    - "'not registered' in rh_subscribed.stdout"
    - rhsub_user is defined
    - rhsub_pass is defined

<<<<<<< HEAD
- name: Register host using activation key
  redhat_subscription:
    activationkey: "{{ rhsub_ak }}"
    org_id: "{{ rhsub_orgid }}"
  register: rh_subscription
  until: rh_subscription is succeeded
  when:
    - "'not registered' in rh_subscribed.stdout"
    - rhsub_ak is defined
    - rhsub_orgid is defined

- name: Determine if OpenShift Pool Already Attached
  command: "subscription-manager list --consumed --pool-only --matches '*OpenShift*'"
=======
- name: Retrieve the OpenShift Pool ID
  command: subscription-manager list --available --matches="{{ rhsub_pool }}" --pool-only
  register: openshift_pool_id
  until: openshift_pool_id | succeeded
  changed_when: False

- name: Determine if OpenShift Pool Already Attached
  command: subscription-manager list --consumed --matches="{{ rhsub_pool }}" --pool-only
>>>>>>> Remove reading shell environment in rhel_subscribe
  register: openshift_pool_attached
  changed_when: False
<<<<<<< HEAD
  ignore_errors: yes
=======
  when: openshift_pool_id.stdout == ''

- fail:
    msg: "Unable to find pool matching {{ rhsub_pool }} in available or consumed pools"
  when: openshift_pool_id.stdout == '' and openshift_pool_attached is defined and openshift_pool_attached.stdout == ''
>>>>>>> Remove reading shell environment in rhel_subscribe

- name: Attach to OpenShift Pool
  command: "subscription-manager attach --pool {{ rhsub_pool }}"
  register: openshift_pool_attached
  changed_when: "'Successfully attached a subscription' in openshift_pool_attached.stdout"
  when: rhsub_pool not in openshift_pool_attached.stdout

- import_tasks: satellite.yml
  when:
    - rhsub_server is defined
    - rhsub_server

---
- name: Install clients
<<<<<<< HEAD
  package:
    name: "{{ openshift_service_type }}-clients{{ openshift_pkg_version | default('') }}"
    state: present
  register: result
  until: result is succeeded
=======
  package: name={{ openshift.common.service_type }}-clients state=present
  when: not openshift.common.is_containerized | bool
  register: result
  until: result | success

- block:
  - name: Pull CLI Image
    command: >
      docker pull {{ openshift_cli_image }}:{{ openshift_image_tag }}
    register: pull_result
    changed_when: "'Downloaded newer image' in pull_result.stdout"

  - name: Copy client binaries/symlinks out of CLI image for use on the host
    openshift_container_binary_sync:
      image: "{{ openshift_cli_image }}"
      tag: "{{ openshift_image_tag }}"
      backend: "docker"
  when:
  - openshift.common.is_containerized | bool
  - not l_use_cli_atomic_image | bool

- block:
  - name: Pull CLI Image
    command: >
      atomic pull --storage ostree {{ 'docker:' if system_images_registry == 'docker' else system_images_registry + '/' }}{{ openshift_cli_image }}:{{ openshift_image_tag }}
    register: pull_result
    changed_when: "'Pulling layer' in pull_result.stdout"
>>>>>>> retry package operations

- name: Check that CLI image is present
  command: "{{ openshift_container_cli }} images -q {{ openshift_cli_image }}"
  register: cli_image

- name: Pre-pull cli image
  command: "{{ openshift_container_cli }} pull {{ openshift_cli_image }}"
  environment:
    NO_PROXY: "{{ openshift.common.no_proxy | default('') }}"
  when: cli_image.stdout_lines == []

- name: Install bash completion for oc tools
<<<<<<< HEAD
  package:
    name: bash-completion
    state: present
  register: result
  until: result is succeeded
=======
  package: name=bash-completion state=present
  when: not openshift.common.is_containerized | bool
  register: result
  until: result | success
>>>>>>> retry package operations
